-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
-- Фильтры (AND):
-- a) Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД < 2.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД = 105590.
-- Вид соединения: LEFT JOIN.

SELECT Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ТИПЫ_ВЕДОМОСТЕЙ
LEFT JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ТВ_ИД = Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД
WHERE Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД < 2 AND Н_ВЕДОМОСТИ.ЧЛВК_ИД = 105590;

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ИМЯ = Роман.
-- b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 112514.
-- c) Н_УЧЕНИКИ.ГРУППА > 3100.
-- Вид соединения: INNER JOIN.

SELECT Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА
FROM Н_ЛЮДИ
    INNER JOIN Н_ОБУЧЕНИЯ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    INNER JOIN Н_УЧЕНИКИ USING (ВИД_ОБУЧ_ИД, ЧЛВК_ИД)
WHERE 
    Н_ЛЮДИ.ИМЯ = 'Роман' AND
    Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 112514 AND
    CAST(Н_УЧЕНИКИ.ГРУППА AS INTEGER) > 3100;

-- Составить запрос, который ответит на вопрос,
-- есть ли среди студентов группы 3102 те, кто не имеет отчества.

SELECT CASE count(*) > 0
    WHEN TRUE   THEN 'Есть'
                ELSE 'Нет'
    END AS СТУДЕНТ_БЕЗ_ОТЧЕСТВА
FROM Н_УЧЕНИКИ
INNER JOIN Н_ЛЮДИ
    ON  Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    AND Н_ЛЮДИ.ОТЧЕСТВО IS NULL
WHERE Н_УЧЕНИКИ.ГРУППА = '3102'; 

-- Найти группы, в которых в 2011 году было
-- ровно 5 обучающихся студентов на ФКТИУ.
-- Для реализации использовать подзапрос.

SELECT ГРУППА
FROM (SELECT count(*) as КОЛ_СТУД, ГРУППА FROM Н_УЧЕНИКИ
	INNER JOIN Н_ПЛАНЫ 
		ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	INNER JOIN Н_ОТДЕЛЫ
		ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
	WHERE 
		Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND
		Н_УЧЕНИКИ.НАЧАЛО <= TIMESTAMP '2011-01-01 00:00:00' AND
		Н_УЧЕНИКИ.КОНЕЦ >= TIMESTAMP '2011-12-31 23:59:59'
	GROUP BY Н_УЧЕНИКИ.ГРУППА) AS КОЛ_СТУД_В_ГРУППЕ
WHERE КОЛ_СТУД = 5

-- Выведите таблицу со средними оценками
-- студентов группы 4100 (Номер, ФИО, Ср_оценка)
-- у которых средняя оценка равна минимальной
-- оценк(е|и) в группе 3100.

SELECT ЧЛВК_ИД AS НОМЕР, 
	CONCAT(ФАМИЛИЯ, ' ', ИМЯ, ' ',  ОТЧЕСТВО) AS ФИО,
	AVG(ОЦЕНКА::int) AS СР_ОЦЕНКА
FROM Н_ВЕДОМОСТИ
    INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
    INNER JOIN Н_УЧЕНИКИ USING (ЧЛВК_ИД)
WHERE ГРУППА = '4100' AND ОЦЕНКА ~ '^[2-5]$'
GROUP BY ЧЛВК_ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО
HAVING AVG(ОЦЕНКА::int) = (
	SELECT MIN(ОЦЕНКА::int) FROM Н_ВЕДОМОСТИ
	INNER JOIN Н_УЧЕНИКИ USING (ЧЛВК_ИД)
	WHERE ГРУППА = '3100' AND ОЦЕНКА ~ '^[2-5]$'
)

-- Получить список студентов, 
-- зачисленных ровно первого сентября 2012 года
-- на первый курс очной или заочной формы обучения.
-- В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер и состояние пункта приказа;
-- Для реализации использовать подзапрос с EXISTS.

SELECT Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ИД,
    Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО,
    Н_УЧЕНИКИ.П_ПРКОК_ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ
FROM Н_ЛЮДИ
    JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
    JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = Н_ПЛАНЫ.ФО_ИД AND
        Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ IN ('Очная', 'Заочная')
WHERE
  Н_УЧЕНИКИ.НАЧАЛО = '2012-09-01'::timestamp AND
  EXISTS (
    SELECT * 
    FROM Н_ПЛАНЫ 
    WHERE Н_ПЛАНЫ.КУРС = 1
    AND Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
  )

-- Сформировать запрос для получения числа в группе No 3100 отличников.

WITH УЧЕНИКИ_3100 AS 
	(
  		SELECT Н_УЧЕНИКИ.ИД, Н_УЧЕНИКИ.ЧЛВК_ИД
    	FROM Н_УЧЕНИКИ
   		WHERE Н_УЧЕНИКИ.ГРУППА = '3100'
	) 
SELECT count(*) FROM 
	(
		SELECT УЧЕНИКИ_3100.ИД FROM УЧЕНИКИ_3100
	 	JOIN Н_ВЕДОМОСТИ USING(ЧЛВК_ИД)
		WHERE ОЦЕНКА = '5' OR ОЦЕНКА = 'зачет'
		GROUP BY УЧЕНИКИ_3100.ИД
	) 
AS ОТЛИЧНИКИ WHERE ОТЛИЧНИКИ.ИД NOT IN 
	(
        SELECT УЧЕНИКИ_3100.ИД FROM УЧЕНИКИ_3100
	 	JOIN Н_ВЕДОМОСТИ USING(ЧЛВК_ИД)
		WHERE ОЦЕНКА != '5' AND ОЦЕНКА != 'зачет'
		GROUP BY УЧЕНИКИ_3100.ИД
	);


